#include <stdio.h>
#include <stdlib.h>
#include <string.h>



#define MAX_EVENTOS 100
#define MAX_TAMANHO_NOME_EVENTO 20
#define MAX_TAMANHO_NOME 50
#define MAX_TAMANHO_PASSWORD 20
#define MAX_UTILIZADORES 50
#define MAX_EMAIL 50

typedef struct evento {
    char nomeEv[MAX_TAMANHO_NOME];
    int data;
    char DetalhesEvento [150];
    float preco;
} Evento;

typedef struct pagamento
{
    int dataPagamento;
    int metodoPagamento;
    int montante;
}Pagamento;

typedef struct utilizador
{
    char nome[MAX_TAMANHO_NOME];
    int nif;
    char email[MAX_EMAIL];
    char password[MAX_TAMANHO_PASSWORD];
    int idade;
    int codAdmin;
}Utilizador;

typedef struct inscrição                                                                                                                                                                                                 
{
    Utilizador utilizador;
    int numeroDoEvento;
    Pagamento pagamento;
}Inscrição;


Evento eventos[MAX_EVENTOS];
int numEvents = 0;

codigoAdmin( Utilizador utilizadorAtual){
if (strcmp(codAdmin, utilizadorAtual.codAdmin) == 0) {
            return 1;
}
return 0;
}
void registarUtilizador(Utilizador utilizadores[], int *numUtilizadores) {
    
    
    
    if (*numUtilizadores >= MAX_UTILIZADORES ) {
        printf("Numero máximo de utilizadores atingido.\n");
        return;
    }else{

    Utilizador novoUtilizador;
   printf("Insira nome: ");
    scanf("%s", novoUtilizador.nome);
    printf("Insira uma password: ");
    scanf("%s", novoUtilizador.password);
    printf("Insira o seu email: ");
    scanf("%s", novoUtilizador.email);
    printf("Insira a idade");
    scanf("%d", novoUtilizador.nome);
    printf("Insira o nif:");
    scanf("%d", novoUtilizador.nif);
    novoUtilizador.codAdmin = 0;

    utilizadores[(*numUtilizadores)++] = novoUtilizador;
    printf("Registration successful.\n");
    }
}

int loginUtilizador(Utilizador utilizadores[], int numUtilizadores, Utilizador utilizadorAtual) {
  

    for (int i = 0; i < numUtilizadores; i++) {
        if (strcmp(utilizadores[i].nome, utilizadorAtual.nome) == 0 && strcmp(utilizadores[i].password, utilizadorAtual.password) == 0) {
            return i;//manda a localização do utilizador atual no array
        }
    }

    return -1;
}

void criarEvento(Evento eventos[], int *numEventos) {
    if (*numEventos >= MAX_EVENTOS) {
        printf("Numero máximo de eventos atingido.\n");
        return;
    }else{
    
    Evento novoEvento;
    printf("Insira o nome do evento: ");
    scanf("%s", novoEvento.nomeEv);
    printf("Insira a data do evento: ");
    scanf("%d", novoEvento.data);
    printf("Insira os detalhes do evento: ");
    scanf("%s", novoEvento.DetalhesEvento);
    printf("Insira o preco que pretende:");
    scanf("%f", novoEvento.preco);
   
    eventos[(*numEventos)++] = novoEvento;
    printf("Evento criado com sucesso, com o numero de evento %d.\n", eventos[*numEventos]);
    }
}

void editarEvento(int numerodoEvento) {
    if (numerodoEvento < 0 || numerodoEvento >= numEvents) {
        printf("Esse evento não existe.\n");
        return;
    }

    printf("Insira o novo nome: ");
    scanf("%s", eventos[numerodoEvento].nomeEv);
 printf("Insira a nova data do evento: ");
    scanf("%s", eventos[numerodoEvento].data);
    printf("Insira os novos detalhes do evento: ");
    scanf("%s", eventos[numerodoEvento].DetalhesEvento);
    printf("Insira o novo preco pretendido:");
    scanf("%d", eventos[numerodoEvento].preco);
    printf("Evento editado com sucesso.\n");
}   

void deleteEvent(Evento eventos[], int *numEventos, int numeroDoEvento) {
    if (numeroDoEvento < 0 || numeroDoEvento >= *numEventos) {
        printf("Esse evento nao existe.\n");
        return;
    }

    for (int i = numeroDoEvento; i < *numEventos - 1; i++) {
        eventos[i] = eventos[i + 1];
    }
    (*numEventos)--;
    printf("Evento eliminado com sucesso.\n");

}

int pesquisarUtilizadorPorNome(Utilizador utilizadores[], int numUtilizadores, const char *nome) {
    for (int i = 0; i < numUtilizadores; i++) {
        if (strcasecmp(utilizadores[i].nome, nome) == 0) {
            return i;
        }
    }
    return -1;
}

int pesquisarEventoPorNome(Evento eventos[], int numEventos, const char *nomeEv) {
    for (int i = 0; i < numEventos; i++) {
        if (strcasecmp(eventos[i].nomeEv, nomeEv) == 0) {
            return i;
        }
    }
    return -1;
}

int main() {
    int escolha;
    int loginuser = -1;
    int numeroDoEvento;
    Utilizador utilizadores[MAX_EVENTOS];
    Evento eventos[MAX_EVENTOS];
    int numUtilizadores = 0;
    int numEventos = 0;
    Utilizador utilizadorAtual;
    utilizadorAtual.codAdmin = 0;
  

    while (1) {// tirar o 1 
        printf("\n--- Organizador de eventos MARS ---\n");
        printf("1. Register\n");//done
        printf("2. Login\n");
        if (utilizadorAtual.codAdmin)
        {
            printf("3. Criar Evento\n");
            printf("4. Editar Evento\n");
            printf("5. Eliminar Evento\n");
            printf("6. Pagina de estatisticas\n");
            printf("7. Pagina de avaliações\n");
            printf("Insira a sua opcção: ");
        }else{
        printf("3. Para verificar os eventos");
        printf("4. Para se inscrever no evento");
        printf("5. Para se desinscrever no evento");
        printf("6. Pagina de avaliações");
        printf("9. Exit\n");
        printf("Insira a sua opcção: ");
        scanf("%d", &escolha);

        switch (escolha) {
            case 1:
           
                registarUtilizador(utilizadores, &numUtilizadores);
                break;
            case 2: //meter dados aqui, e pedir em baixo
               printf("Insira o nome: ");
                scanf("%s", utilizadorAtual.nome);
                printf("Insira a password: ");
                scanf("%s", utilizadorAtual.password);
                loginuser = loginUtilizador(utilizadores, numUtilizadores, utilizadorAtual);

                if (loginuser == -1)
                {
                    printf("Palavra passe ou Nome incorretos");
                }else{
                    utilizadorAtual = utilizadores[loginuser];//traz a localização do user atual
                    printf("Login bem sucedido");
                }
                
                break;
            case 3:
                if (loginuser  == -1) {
                    printf("Porfavor, efetue login primeiro.\n");
                } else {
                    if (utilizadorAtual.codAdmin) {
                         criarEvento(eventos, &numEventos);
                }}
                break;
            case 4:
                if (loginuser== -1) {
                    printf("Please login first.\n");
                } else {
                     if (utilizadorAtual.codAdmin) {
                        printf("Insira o numero do evento");
                        scanf("%d", &numeroDoEvento);
                      editarEvento(numeroDoEvento);
                }
                   
                }
                break;
            case 5:
                if (loginuser == -1) {
                    printf("Please login first.\n");
                } else {
                    if(utilizadorAtual.codAdmin){
                           deleteEvent(eventos, &numEventos, numeroDoEvento);
                    }
                }
                break;
            case 6:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice.\n");
        }
    }
    }
    return 0;
}